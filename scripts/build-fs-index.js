const FlexSearch = require("flexsearch");
const axios = require("axios");
const path = require("path");
const fs = require("fs");
const zlib = require("zlib");

const projectPath = path.join(__dirname, "..");
const configPath = path.join(projectPath, "flexsearch.json");

const generatedDir = "__generated__";
if (!fs.existsSync(generatedDir)) {
  fs.mkdirSync(generatedDir);
}

const fieldContactIndexPath = path.join(
  projectPath,
  generatedDir,
  `loadFieldContactIndex.ts`
);

const config = JSON.parse(fs.readFileSync(configPath));

// Download field contact data and build a flexsearch index
axios.get(process.env.NEXT_PUBLIC_FIO_DATA_URL).then(({ data }) => {
  const index = FlexSearch.create(config);
  index.add(Object.values(data));
  const indexStr = index.export();
  const deflatedIndex = zlib.deflateSync(indexStr).toString("base64");
  const tsFile = `
/** This file was generated by build-fs-index.js */
import {inflateSync} from "zlib";

const index = "${deflatedIndex}";
export default () => inflateSync(Buffer.from(index, "base64")).toString()
`;
  fs.writeFileSync(fieldContactIndexPath, tsFile);
});
